{"version":3,"sources":["carousel/CarouselModal.tsx","carousel/actualSlideIndex.ts","carousel/CarouselSlide.tsx","carousel/CarouselControls.tsx","carousel/CarouselContent.tsx","carousel/useSlideIndex.ts","carousel/Carousel.tsx","App.tsx","serviceWorker.ts","index.tsx","images/1.jpg","images/2.jpg","images/3.jpg","images/4.jpg","images/5.jpg","images/6.jpg","images/7.jpg","images/8.jpg","images/9.jpg","images/10.jpg"],"names":["useStyles","makeStyles","theme","modalRoot","outline","modalContent","breakpoints","down","width","margin","position","top","transform","up","marginTop","spacing","marginLeft","marginRight","CarouselModal","children","classes","Modal","open","BackdropComponent","Backdrop","className","Fade","appear","in","Paper","elevation","actualSlideIndex","index","totalLength","slide","display","img","height","maxWidth","maxHeight","objectFit","lineHeight","CarouselSlide","alt","src","arrowsContainer","left","justifyContent","alignItems","pointerEvents","arrow","srOnly","padding","overflow","clip","border","CarouselControls","goToPreviousSlide","goToNextSlide","translations","Fab","onClick","previousButton","aria-hidden","nextButton","carouselRoot","flexDirection","carouselContainer","carouselTitle","carouselStatus","textAlign","VirualizedSwipableViews","bindKeyboard","virtualize","SwipeableViews","CarouselContent","slides","title","getTranslations","slidesCount","length","hasMultipleSlides","useState","currentIndex","setCurrentIndex","handleChangeIndex","current","currentSlideNumber","previousSlideNumber","nextSlideNumber","slideIndex","useSlideIndex","onChangeIndex","slideRenderer","key","slideToDisplay","animateHeight","aria-live","status","Carousel","props","image1","image2","image3","image4","image5","image6","image7","image8","image9","image10","App","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d5c1f014.chunk.js","sourcesContent":["import React from 'react';\nimport { Backdrop, Fade, makeStyles, Modal, Paper } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  modalRoot: {\n    '& > *:focus': {\n      // The modal sets the focus on the Paper within, but it's quite ugly\n      outline: 'none',\n    },\n  },\n  modalContent: {\n    // On mobile, the modal takes the full width, and as much height as it can.\n    [theme.breakpoints.down('sm')]: {\n      // Dimensions\n      width: '100%',\n      // Horizontal align\n      margin: '-16px auto 0',\n      // Vertical align\n      position: 'relative',\n      top: '50%',\n      transform: 'translateY(-50%)',\n    },\n    // On desktop the modal takes the full height, and as much with as it can.\n    [theme.breakpoints.up('md')]: {\n      marginTop: theme.spacing(2),\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2),\n    },\n  },\n}));\n\nexport function CarouselModal({ children }: any) {\n  const classes = useStyles();\n\n  return (\n    <Modal\n      open={true}\n      BackdropComponent={Backdrop}\n      className={classes.modalRoot}\n    >\n      <Fade appear in={true}>\n        <Paper elevation={2} className={classes.modalContent}>\n          {children}\n        </Paper>\n      </Fade>\n    </Modal>\n  );\n}\n","/**\n * The index of the slide is virtualized: the current value of the index can vary\n * from minus infinity to plus infinity, although there is a finite number of slides.\n *\n * For instance if the current index is -4, but there are only 3 slides, the actual\n * index will be 2.\n *\n * Highly inspired of https://github.com/TeamWertarbyte/material-auto-rotating-carousel\n *\n * @param index\n * @param totalLength\n */\nexport function actualSlideIndex(index: number, totalLength: number): number {\n  return ((index % totalLength) + totalLength) % totalLength;\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\n\nexport type CarouselSlideType = {\n  src: string;\n  alt: string;\n  width: string | number;\n  height: string | number;\n};\n\nconst useStyles = makeStyles(theme => ({\n  slide: {\n    display: 'flex',\n  },\n  img: {\n    width: '100%',\n    height: 'auto',\n    // Horizontal align\n    margin: '0 auto',\n    // Keep the aspect ratio and takes the maximum height or width possible\n    maxWidth: '100vw',\n    maxHeight: 'calc(100vh - 10rem)',\n    objectFit: 'scale-down',\n    // Fix potential cross browser weirdness\n    lineHeight: 0,\n    [theme.breakpoints.up('md')]: {\n      // On desktop, we have to account for the margins of the modal\n      maxWidth: `calc(100vw - ${theme.spacing(4)}px)`,\n    },\n  },\n}));\n\nexport function CarouselSlide({ alt, src, width, height }: CarouselSlideType) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.slide}>\n      <img\n        className={classes.img}\n        src={src}\n        alt={alt || ''}\n        width={width}\n        height={height}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Fab, makeStyles } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport { CarouselTranslationsType } from './Carousel';\n\nconst useStyles = makeStyles(theme => ({\n  arrowsContainer: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    // Critical, otherwise the swipe doesn't work on the underline component\n    pointerEvents: 'none',\n  },\n  arrow: {\n    // The rule above cascades to the button\n    pointerEvents: 'all',\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  srOnly: {\n    position: 'absolute',\n    width: '1px',\n    height: '1px',\n    padding: 0,\n    margin: '-1px',\n    overflow: 'hidden',\n    clip: 'rect(0, 0, 0, 0)',\n    border: 0,\n  },\n}));\n\ntype CarouselControlsProps = {\n  goToPreviousSlide: () => void;\n  goToNextSlide: () => void;\n  translations: CarouselTranslationsType;\n};\n\nexport function CarouselControls({\n  goToPreviousSlide,\n  goToNextSlide,\n  translations,\n}: CarouselControlsProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.arrowsContainer}>\n      <Fab className={classes.arrow} onClick={goToPreviousSlide}>\n        <span className={classes.srOnly}>{translations.previousButton}</span>\n        <ArrowBackIcon aria-hidden />\n      </Fab>\n      <Fab className={classes.arrow} onClick={goToNextSlide}>\n        <span className={classes.srOnly}>{translations.nextButton}</span>\n        <ArrowForwardIcon aria-hidden />\n      </Fab>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\n// The types for react-swipeable-views are not up to date.\n// @ts-ignore\nimport { bindKeyboard, virtualize } from 'react-swipeable-views-utils';\nimport SwipeableViews from 'react-swipeable-views';\nimport { useSlideIndex } from './useSlideIndex';\nimport { actualSlideIndex } from './actualSlideIndex';\nimport { CarouselSlide } from './CarouselSlide';\nimport { CarouselControls } from './CarouselControls';\nimport { CarouselType } from './Carousel';\n\nconst useStyles = makeStyles({\n  carouselRoot: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  carouselContainer: {\n    position: 'relative',\n    lineHeight: 0,\n  },\n  carouselTitle: {\n    margin: '1rem',\n  },\n  carouselStatus: {\n    textAlign: 'end',\n    margin: '1rem',\n  },\n});\n\nconst VirualizedSwipableViews = bindKeyboard(virtualize(SwipeableViews));\n\nexport function CarouselContent({\n  slides,\n  title,\n  getTranslations,\n}: CarouselType) {\n  const classes = useStyles();\n  const slidesCount = slides.length;\n  const hasMultipleSlides = slidesCount > 1;\n\n  const {\n    goToPreviousSlide,\n    goToNextSlide,\n    handleChangeIndex,\n    currentSlideNumber,\n    previousSlideNumber,\n    nextSlideNumber,\n    slideIndex,\n  } = useSlideIndex(slidesCount);\n\n  const translations = getTranslations(\n    currentSlideNumber,\n    nextSlideNumber,\n    previousSlideNumber,\n    slidesCount\n  );\n\n  const slideRenderer = ({ index, key }: any) => {\n    // Translate the virtual index to an actual slide to display.\n    const slideToDisplay = actualSlideIndex(index, slides.length);\n    const slide = slides[slideToDisplay];\n    return <CarouselSlide key={key} {...slide} />;\n  };\n\n  return (\n    <div className={classes.carouselRoot}>\n      {title && <h2 className={classes.carouselTitle}>{title}</h2>}\n      <div className={classes.carouselContainer}>\n        <VirualizedSwipableViews\n          onChangeIndex={handleChangeIndex}\n          index={slideIndex}\n          slideRenderer={slideRenderer}\n          animateHeight={true}\n        />\n        {hasMultipleSlides && (\n          <>\n            <CarouselControls\n              goToPreviousSlide={goToPreviousSlide}\n              goToNextSlide={goToNextSlide}\n              translations={translations}\n            />\n            <div aria-live=\"polite\" className={classes.carouselStatus}>\n              {translations.status}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { actualSlideIndex } from './actualSlideIndex';\n\ntype UseSlideIndexReturn = {\n  goToPreviousSlide: () => void;\n  goToNextSlide: () => void;\n  handleChangeIndex: (currentIndex: number) => void;\n  currentSlideNumber: number;\n  previousSlideNumber: number;\n  nextSlideNumber: number;\n  slideIndex: number;\n};\n\nexport function useSlideIndex(length: number): UseSlideIndexReturn {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const handleChangeIndex = (current: number) => setCurrentIndex(current);\n\n  // For human readable texts\n  const currentSlideNumber = actualSlideIndex(currentIndex, length) + 1;\n  const previousSlideNumber = actualSlideIndex(currentIndex - 1, length) + 1;\n  const nextSlideNumber = actualSlideIndex(currentIndex + 1, length) + 1;\n\n  const goToNextSlide = () => setCurrentIndex(currentIndex + 1);\n  const goToPreviousSlide = () => setCurrentIndex(currentIndex - 1);\n\n  return {\n    goToPreviousSlide,\n    goToNextSlide,\n    handleChangeIndex,\n    currentSlideNumber,\n    previousSlideNumber,\n    nextSlideNumber,\n    slideIndex: currentIndex,\n  };\n}\n","import React from 'react';\nimport { CarouselSlideType } from './CarouselSlide';\nimport { CarouselModal } from './CarouselModal';\nimport { CarouselContent } from './CarouselContent';\n\nexport type CarouselTranslationsType = {\n  nextButton: string;\n  previousButton: string;\n  status: string;\n};\n\nexport type CarouselType = {\n  slides: CarouselSlideType[];\n  title?: string;\n  getTranslations: (\n    currentSlideNumber: number,\n    nextSlideNumber: number,\n    previousSlideNumber: number,\n    slidesCount: number\n  ) => CarouselTranslationsType;\n};\n\nexport function Carousel(props: CarouselType) {\n  return (\n    <CarouselModal>\n      <CarouselContent {...props} />\n    </CarouselModal>\n  );\n}\n","import React from 'react';\nimport { CssBaseline } from '@material-ui/core';\nimport { Carousel, CarouselTranslationsType } from './carousel';\n\n// Test images\nimport image1 from './images/1.jpg';\nimport image2 from './images/2.jpg';\nimport image3 from './images/3.jpg';\nimport image4 from './images/4.jpg';\nimport image5 from './images/5.jpg';\nimport image6 from './images/6.jpg';\nimport image7 from './images/7.jpg';\nimport image8 from './images/8.jpg';\nimport image9 from './images/9.jpg';\nimport image10 from './images/10.jpg';\n\nconst slides = [\n  {\n    src: image1,\n    alt: 'Image 1',\n    width: 3840,\n    height: 2243,\n  },\n  {\n    src: image2,\n    alt: 'Image 2',\n    width: 3886,\n    height: 2426,\n  },\n  {\n    src: image3,\n    alt: 'Image 3',\n    width: 3953,\n    height: 2965,\n  },\n  {\n    src: image4,\n    alt: 'Image 4',\n    width: 4098,\n    height: 2732,\n  },\n  {\n    src: image5,\n    alt: 'Image 5',\n    width: 4124,\n    height: 2600,\n  },\n  {\n    src: image6,\n    alt: 'Image 6',\n    width: 4242,\n    height: 2154,\n  },\n  {\n    src: image7,\n    alt: 'Image 7',\n    width: 4949,\n    height: 3280,\n  },\n  {\n    src: image8,\n    alt: 'Image 8',\n    width: 5042,\n    height: 3445,\n  },\n  {\n    src: image9,\n    alt: 'Image 9',\n    width: 5163,\n    height: 3442,\n  },\n  {\n    src: image10,\n    alt: 'Image 10',\n    width: 5464,\n    height: 3070,\n  },\n];\n\nfunction getTranslations(\n  currentSlideNumber: number,\n  nextSlideNumber: number,\n  previousSlideNumber: number,\n  slidesCount: number\n): CarouselTranslationsType {\n  return {\n    nextButton: `Go to slide ${nextSlideNumber}`,\n    previousButton: `Go to slide ${previousSlideNumber}`,\n    status: `Slide ${currentSlideNumber} over ${slidesCount}`,\n  };\n}\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <CssBaseline />\n      <div className=\"App\">\n        <Carousel\n          getTranslations={getTranslations}\n          slides={slides}\n          title=\"Test Carousel\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/1.43e4c49e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.f7d19951.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.dc8a3344.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.e2df36ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.0b400027.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.32cfee3f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7.35128041.jpg\";","module.exports = __webpack_public_path__ + \"static/media/8.67a0cb42.jpg\";","module.exports = __webpack_public_path__ + \"static/media/9.d09e100b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/10.61757b73.jpg\";"],"sourceRoot":""}